import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java'
    id "org.sonarqube" version "4.4.1.3373"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id 'jacoco'
    id 'idea'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '5.0.0'
}

group 'com.nur'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
apply from: file('gradle/heroku/clean.gradle')

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'jacoco'


    repositories {
        mavenCentral()
    }

    dependencies {
        // Otras dependencias de tu proyecto

        // Jacoco
        implementation 'org.jacoco:org.jacoco.core:0.8.11'
    }

    test {
        finalizedBy jacocoTestReport
        testLogging {
            events TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED
        }
    }

    jacocoTestReport {
        //dependsOn test
        reports {
            xml.required = true
            html.required = true
            html.destination file("build/reports/jacoco")
        }
    }

}
project(':ShareKernel') {
    dependencies {}
}

project(':CheckInDomain') {
    dependencies {
        implementation project(':ShareKernel')
    }
}

project(':CheckIn.Application') {
    dependencies {
        implementation project(':ShareKernel'), project(':CheckInDomain')
        testImplementation project(':CheckInDomain').sourceSets.test.output
    }
}

project('CheckIn.Infraestructure') {
    dependencies {
        implementation project(':ShareKernel'), project(':CheckInDomain'), project(':CheckIn.Application')
        testImplementation project(':CheckInDomain').sourceSets.test.output, project(':CheckIn.Application').sourceSets.test.output
    }
}

project('CheckInApi') {
    dependencies {
        implementation project(':ShareKernel'),
                project(':CheckInDomain'),
                project(':CheckIn.Infraestructure'),
                project(':CheckIn.Application')
        testImplementation project(':CheckInDomain').sourceSets.test.output,
                project(':CheckIn.Application').sourceSets.test.output
    }
}

sonarqube {
    properties {
        property "sonar.gradle.skipCompile", "true"
        property "sonar.projectKey", "CrissVargasUAGRM_diplomado"
        property "sonar.organization", "crissvargasuagrm"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.sonar {
    // Enable build cache for this specific task
    outputs.upToDateWhen { false }
}

checkstyle {
    toolVersion = '10.12.5'
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    showViolations = true
    ignoreFailures = false
}


